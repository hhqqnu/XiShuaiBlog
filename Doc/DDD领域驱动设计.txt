DDD相关书籍：《领域驱动设计:软件核心复杂性应对之道》
	     《领域驱动设计与模式实战》

在领域对象的生命周期中,有三个模式来维护对象的完整性：聚合（Aggregate）定义清晰的所有权和边界使模型更加紧凑，
避免出现盘根错节的对象关系网；工厂（Factory）和组合（Respository）。当一个对象生命周期之始，
使用工厂和组合提供访问和控制模型对象的方法。建立聚合的模型，并把工厂和组合加入到设计中来，
可以使我们系统地对模型对象进行管理。聚合圈出一个范围，在这个范围中，对象无论在哪个生命周期，保持不变性。


    Presentation Layer：展现层，负责显示和接受输入；
    Application Layer(Service)：应用层，很薄的一层，只包含工作流控制逻辑，不包含业务逻辑；
    Domain Layer(Domain)：领域层，包含整个应用的所有业务逻辑；
    Infrastructure Layer：基础层，提供整个应用的基础服务；



区别所在还是在服务层和领域模型，要看业务逻辑是以过程脚本的形式集中在服务层而领域模型基本没有业务逻辑（贫血）；还是服务层仅仅作为一个外观，领域逻辑集中在领域模型内部（充血）

领域模型的概念：http://www.oschina.net/question/12_21641

得知原来“事务脚本”同样用类，却并不是真正的面像对象：很多人也在用类,也在使用模式,但是他们的思维一样是面向过程的,因为他们的世界中除了过程就不存在任何东西了
它们俩如何来区分呢？
其实还是面向过程与面向对象的分别：
事务脚本：围绕功能，以功能为中心。
领域模型：描述领域类，以类之间的协作完成所需功能。

Seedwork是一些可重用的代码，它比framework小，迷你。Framework提供基础的功能让你去实现模式跟设计。Seedwork则更加趋近于对特点细节（业务）的抽象跟封装，以达到复用的目的。Seedwork的代码通常只能在一个或一类项目中重用。
